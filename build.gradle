plugins {
    id 'com.zoltu.kotlin' version '1.0.6'
}

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'checkstyle'
apply plugin: 'idea'

project.version = '9.0.0'

sourceCompatibility = JavaVersion.VERSION_1_8

checkstyle {
    toolVersion = '7.5.1'
}

jacoco {
    toolVersion = '0.7.9'
}

repositories {
    jcenter()
}

dependencies {
    compile files("${System.properties['java.home']}/../lib/tools.jar")
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.8.7"
    compile 'com.neuronrobotics:nrjavaserial:3.11.0'
    compile 'com.pi4j:pi4j-core:1.0'
    compile 'commons-cli:commons-cli:1.3.1'
    compile 'io.reactivex:rxjava:1.2.7'
    compile 'io.reactivex:rxjavafx:1.1.0'
    compile 'javax.inject:javax.inject:1'
    compile 'net.java.jinput:jinput:2.0.6'
    compile 'org.bytedeco:javacv-platform:1.3.2'
    compile 'org.cfg4j:cfg4j-core:4.4.0'
    compile 'org.jetbrains.kotlin:kotlin-stdlib:1.0.6'
    compile 'org.slf4j:slf4j-nop:1.7.24'
    compile 'org.tinylog:tinylog:1.2'
    compile 'rxbroadcast:rxbroadcast:1.1.0'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.7.12'
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << '-Xlint:unchecked' << '-Xdiags:verbose'  << "-Xlint:deprecation"
        }
    }
}

task buildZip(type: Zip) {
    from configurations.runtime
    baseName 'eer-dependencies'
}

test {
    testLogging {
        exceptionFormat = 'full'
        showStandardStreams = true
        events 'passed', 'skipped', 'failed'
    }
}

task testJar(type: Jar) {
    from sourceSets.test.output + sourceSets.main.output
    from(configurations.testCompile.collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude 'META-INF/**'
    }

    classifier 'tests'
    description 'Assembles a jar archive containing the test classes.'
    group 'verification'
}
